// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notary.Data.Main_Core.DataBaseContext;

namespace Notary.Data.Main_Core.Migrations
{
    [DbContext(typeof(DB_NotaryMainEntities))]
    [Migration("20191105135741_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Notary.Data.Main_Core.Model.CitizenIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CitizenTransactionCommonDataId")
                        .HasColumnType("int");

                    b.Property<string>("citizen_bookdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_d")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("citizen_id_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("citizen_id_form_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_information_office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_issued_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_m")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_sahefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("citizen_id_type_id")
                        .HasColumnType("int");

                    b.Property<string>("citizen_id_z")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("citizen_transaction_common_dataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("citizen_transaction_common_dataId");

                    b.ToTable("CitizenIdentity");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.NotaryDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image_Content")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("NotaryDocuments");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.citizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("c_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("citizen");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.citizen_transaction_common_data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("citizenId")
                        .HasColumnType("int");

                    b.Property<string>("citizen_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_housing_id_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("citizen_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("citizen_id_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("citizen_id_issued_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_mahfaza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_record")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_id_sahefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("citizen_id_tanzeem_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("citizen_id_type_id")
                        .HasColumnType("int");

                    b.Property<string>("citizen_info_center")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_job_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_job_office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("citizen_nationality_id")
                        .HasColumnType("int");

                    b.Property<string>("citizen_nearstPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("citizen_role_id")
                        .HasColumnType("int");

                    b.Property<string>("citizen_tamwen_center")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizen_tamwen_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("citizenId");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("citizen_transaction_common_data");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.external_visit_requests", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("justicewriter_id")
                        .HasColumnType("int");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("office_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("request_date_time")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("request_decision")
                        .HasColumnType("bit");

                    b.Property<string>("request_ticket_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestor_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transaction_type_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("external_visit_requests");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_additional_data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("TT10_martyr_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT10_martyr_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT12_transaction_conditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT12_transaction_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT13_confession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT14_contract_confitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT14_contract_deccription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT14_contract_value")
                        .HasColumnType("float");

                    b.Property<bool?>("TT14_is_contract_withvalue")
                        .HasColumnType("bit");

                    b.Property<string>("TT15_contract_confitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT15_contract_deccription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT15_contract_value")
                        .HasColumnType("float");

                    b.Property<string>("TT16_chapter1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT16_chapter2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT16_contact_value")
                        .HasColumnType("float");

                    b.Property<string>("TT16_period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT17_contract_confitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT17_contract_deccription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT17_contract_value")
                        .HasColumnType("float");

                    b.Property<bool?>("TT17_is_contract_withvalue")
                        .HasColumnType("bit");

                    b.Property<string>("TT18_contract_confitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT18_contract_deccription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT18_contract_value")
                        .HasColumnType("float");

                    b.Property<bool?>("TT18_is_contract_withvalue")
                        .HasColumnType("bit");

                    b.Property<string>("TT19_building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT19_contact_value")
                        .HasColumnType("float");

                    b.Property<string>("TT19_contract_confitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_contract_deccription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_current_actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_current_record_count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT19_current_record_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT19_current_record_lather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT19_district_id")
                        .HasColumnType("int");

                    b.Property<string>("TT19_factory_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_from_record_count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT19_from_record_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT19_from_record_lather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT19_governorate_id")
                        .HasColumnType("int");

                    b.Property<string>("TT19_judgement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_fuel_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_horse_power")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_purchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_specifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_machine_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT19_machine_value")
                        .HasColumnType("float");

                    b.Property<string>("TT19_machine_volume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT19_mortgage_amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TT19_mortgage_end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT19_mortgage_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_mortgage_other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT19_mortgage_over_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TT19_mortgage_start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT19_mortgage_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_mortgage_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_owner_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_piece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT19_to_record_count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT19_to_record_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT19_to_record_lather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_current_actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT20_district_id")
                        .HasColumnType("int");

                    b.Property<string>("TT20_edbara_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_factory_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT20_governorate_id")
                        .HasColumnType("int");

                    b.Property<string>("TT20_judgement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT20_mortgage_amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TT20_mortgage_end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT20_mortgage_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT20_mortgage_start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT20_mortgage_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_mortgage_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_owner_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_piece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_record_lether")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT20_survey_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT20_survey_employee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_survey_expert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT20_survey_wage")
                        .HasColumnType("float");

                    b.Property<string>("TT21_Edbara_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_current_actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT21_current_record_count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TT21_current_record_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT21_current_record_lather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT21_district_id")
                        .HasColumnType("int");

                    b.Property<string>("TT21_factory_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT21_from_record_count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TT21_from_record_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT21_from_record_lather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT21_governorate_id")
                        .HasColumnType("int");

                    b.Property<string>("TT21_judgement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_fuel_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_horse_power")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_purchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_specifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_machine_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT21_machine_value")
                        .HasColumnType("float");

                    b.Property<string>("TT21_machine_volume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT21_mortgage_amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TT21_mortgage_end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT21_mortgage_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_mortgage_other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT21_mortgage_over_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TT21_mortgage_start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT21_mortgage_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_mortgage_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_owner_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_piece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT21_province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT21_to_record_count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TT21_to_record_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT21_to_record_lather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT23_recorded1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT23_recorded1_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT23_recorded2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT24_amount")
                        .HasColumnType("float");

                    b.Property<string>("TT24_amount_reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT24_amount_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT25_amount")
                        .HasColumnType("float");

                    b.Property<string>("TT25_amount_reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT25_amount_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT25_due_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TT26_PagesCount")
                        .HasColumnType("int");

                    b.Property<int?>("TT27_PagesCount")
                        .HasColumnType("int");

                    b.Property<int?>("TT27_source_trans_public_nuber")
                        .HasColumnType("int");

                    b.Property<bool?>("TT29_print_warning_notification")
                        .HasColumnType("bit");

                    b.Property<bool?>("TT29_print_warning_notification_book")
                        .HasColumnType("bit");

                    b.Property<string>("TT29_warning_acting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT29_warning_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT29_warning_notification_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT2_piece_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT2_province_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TT30_Secretariats")
                        .HasColumnType("bit");

                    b.Property<int?>("TT30_district_id")
                        .HasColumnType("int");

                    b.Property<bool?>("TT30_print_warning_notification")
                        .HasColumnType("bit");

                    b.Property<bool?>("TT30_print_warning_notification_book")
                        .HasColumnType("bit");

                    b.Property<string>("TT30_real_Estate_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT30_rent_value")
                        .HasColumnType("float");

                    b.Property<string>("TT30_warning_acting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT30_warning_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT30_warning_notification_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT31_previous_JW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT31_previous_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TT31_previous_record_number")
                        .HasColumnType("int");

                    b.Property<string>("TT31_previous_transaction_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TT31_print_warning_notification")
                        .HasColumnType("bit");

                    b.Property<bool?>("TT31_print_warning_notification_book")
                        .HasColumnType("bit");

                    b.Property<string>("TT31_warning_acting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT31_warning_notification_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT32_previous_JW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT32_previous_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TT32_previous_record_number")
                        .HasColumnType("int");

                    b.Property<string>("TT32_previous_transaction_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TT32_print_warning_notification")
                        .HasColumnType("bit");

                    b.Property<bool?>("TT32_print_warning_notification_book")
                        .HasColumnType("bit");

                    b.Property<string>("TT32_warning_acting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT32_warning_notification_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TT33_print_warning_notification")
                        .HasColumnType("bit");

                    b.Property<bool?>("TT33_print_warning_notification_book")
                        .HasColumnType("bit");

                    b.Property<string>("TT33_transaction_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT33_warning_acting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT33_warning_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT33_warning_notification_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT34_intimation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT34_intimation_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT34_warning_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TT34_warning_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT34_warning_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT36_previous_JW_office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TT36_previous_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TT36_previous_public_number")
                        .HasColumnType("int");

                    b.Property<int?>("TT36_previous_record_number")
                        .HasColumnType("int");

                    b.Property<string>("TT36_transaction_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT36_warning_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT38_association_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT38_record_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT38_record_number_owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT3_purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT40_association_transaction_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT41_machine_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT41_nameof_almukhtas_visit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT41_placefor_almukhtas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT41_placefor_machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT41_request_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT41_resonfor_visit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT43_amount")
                        .HasColumnType("float");

                    b.Property<string>("TT43_attendance_at")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT43_attendance_for")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT43_payment_safe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT44_contract_confitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT44_contract_deccription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT44_contract_value")
                        .HasColumnType("float");

                    b.Property<string>("TT5_vehicle_cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT5_vehicle_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT5_vehicle_engine_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT5_vehicle_holder_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT5_vehicle_manufact_year")
                        .HasColumnType("int");

                    b.Property<string>("TT5_vehicle_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT5_vehicle_owner_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TT5_vehicle_passenger_count")
                        .HasColumnType("int");

                    b.Property<string>("TT5_vehicle_shase_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT5_vehicle_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT5_vehicle_year_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT6_amount")
                        .HasColumnType("float");

                    b.Property<string>("TT6_attendance_at")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT6_attendance_for")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT6_payment_safe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT7_amount")
                        .HasColumnType("float");

                    b.Property<string>("TT7_court_case_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT7_court_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT8_partner_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT9_certificate_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT9_donor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT9_student_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("transaction_additional_data");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_additional_data_sub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TT20_sub_machine_origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_sub_machine_purchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_sub_machine_specifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT20_sub_machine_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TT20_sub_machine_value")
                        .HasColumnType("float");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("transaction_additional_data_sub");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_common_data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("HasValue")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExemptable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int?>("LastWorkingUserId")
                        .HasColumnType("int");

                    b.Property<int>("RefrenceId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("external_visit_requests_id")
                        .HasColumnType("int");

                    b.Property<int?>("external_visit_requestsid")
                        .HasColumnType("int");

                    b.Property<int?>("final_status")
                        .HasColumnType("int");

                    b.Property<int>("office_id")
                        .HasColumnType("int");

                    b.Property<double?>("tr_basic_paid_fees")
                        .HasColumnType("float");

                    b.Property<int>("tr_copy_count")
                        .HasColumnType("int");

                    b.Property<bool>("tr_is_internal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("tr_official_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("tr_paid_fees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("tr_public_number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("tr_receipt_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("tr_receipt_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tr_record_number")
                        .HasColumnType("int");

                    b.Property<string>("tr_ticket_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("tr_total_addtional_fees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tr_total_original_fees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("tr_value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("transaction_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transaction_Content_Sub1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transaction_Content_Sub2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transaction_type_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("external_visit_requestsid");

                    b.ToTable("transaction_common_data");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_common_data_FeesSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CopiesFinalPercentageValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FeesTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxValueForCopies")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxValueForOriginal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinValueForCopies")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinValueForOriginal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OriginalFinalPercentageValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentageForCopies")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentageForOriginal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueOfCopies")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValueOfOriginal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("transaction_common_data_FeesSetting");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_common_data_transaction_status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("end_timestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("start_timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.Property<int>("transaction_status_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("transaction_common_data_transaction_status");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_copy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CopyTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("scanned_copy")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("scanned_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("transaction_copy");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NotaryDocumentsId")
                        .HasColumnType("int");

                    b.Property<int?>("documentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("document_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("document_type_id")
                        .HasColumnType("int");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaryDocumentsId");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("transaction_document");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_fp_photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("citizen_photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("citizen_transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int?>("citizen_transaction_common_data_id")
                        .HasColumnType("int");

                    b.Property<byte[]>("finger_print")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("citizen_transaction_common_dataId");

                    b.ToTable("transaction_fp_photo");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_updates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("citizen_transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int?>("citizen_transaction_common_data_Id")
                        .HasColumnType("int");

                    b.Property<string>("field_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("required_updates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("citizen_transaction_common_dataId");

                    b.ToTable("transaction_updates");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.user_activity_log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("log_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("log_timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("transaction_common_dataId")
                        .HasColumnType("int");

                    b.Property<int?>("transaction_common_data_id")
                        .HasColumnType("int");

                    b.Property<int>("user_activity_log_type_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transaction_common_dataId");

                    b.ToTable("user_activity_log");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.CitizenIdentity", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.citizen_transaction_common_data", "citizen_transaction_common_data")
                        .WithMany("CitizenIdentity")
                        .HasForeignKey("citizen_transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.citizen_transaction_common_data", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.citizen", "citizen")
                        .WithMany("citizen_transaction_common_data")
                        .HasForeignKey("citizenId");

                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("citizen_transaction_common_data")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_additional_data", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("transaction_additional_data")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_additional_data_sub", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("transaction_additional_data_sub")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_common_data", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.external_visit_requests", "external_visit_requests")
                        .WithMany("transaction_common_data")
                        .HasForeignKey("external_visit_requestsid");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_common_data_FeesSetting", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("transaction_common_data_FeesSetting")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_common_data_transaction_status", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("transaction_common_data_transaction_status")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_copy", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("transaction_copy")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_document", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.NotaryDocuments", "NotaryDocuments")
                        .WithMany()
                        .HasForeignKey("NotaryDocumentsId");

                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("transaction_document")
                        .HasForeignKey("transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_fp_photo", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.citizen_transaction_common_data", "citizen_transaction_common_data")
                        .WithMany("transaction_fp_photo")
                        .HasForeignKey("citizen_transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.transaction_updates", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.citizen_transaction_common_data", "citizen_transaction_common_data")
                        .WithMany("transaction_updates")
                        .HasForeignKey("citizen_transaction_common_dataId");
                });

            modelBuilder.Entity("Notary.Data.Main_Core.Model.user_activity_log", b =>
                {
                    b.HasOne("Notary.Data.Main_Core.Model.transaction_common_data", "transaction_common_data")
                        .WithMany("user_activity_log")
                        .HasForeignKey("transaction_common_dataId");
                });
#pragma warning restore 612, 618
        }
    }
}
